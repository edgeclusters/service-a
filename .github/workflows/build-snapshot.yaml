name: build snapshot

on:
  push:
    branches:
      - "feature/**"
  workflow_dispatch:

env:
  # SERVICE_NAME: service-a
  MAVEN_SETTINGS_SECURITY: "<settingsSecurity><master>${{ secrets.MAVEN_MASTER_PASSWORD }}</master></settingsSecurity>"
  IMAGE_REPOSITORY: academy
  TARGET_PLATFORMS: "linux/amd64,linux/arm64"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      ###################################################
      ## load commmon environment
      ###################################################
      - name: Checkout common repo
        uses: actions/checkout@v2
        with:
          repository: edgeclusters/academy-common
          path: common
          token: ${{ secrets.COMMON_REPO_ACCESS_TOKEN }}

      - name: Load common configuration values
        run: cat common/config.env >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          path: app

      - name: Set up JDK 17
        uses: actions/setup-java@v2.5.0
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

      - name: Build with Maven
        run: |
          cd app
          mvn package

      - name: Prepare maven settings-security.xml
        run: |
          echo "${{ env.MAVEN_SETTINGS_SECURITY }}" > ~/.m2/settings-security.xml

      - name: Get service name and version
        run: |
          echo "SERVICE_NAME=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec)" >> $GITHUB_ENV
          echo "SERVICE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Upload to Nexus
        run: |
          export APP_JAR=$(ls -1 app/target/${{ env.SERVICE_NAME }}-${{ env.SERVICE_VERSION }}.jar)
          mvn deploy:deploy-file \
          -Durl=${{ env.NEXUS_SNAPSHOTS_REPO_URL }} \
          -DrepositoryId=nexus-snapshots \
          -Dfile=$APP_JAR \
          -DgeneratePom=false \
          -DpomFile=app/pom.xml \
          --settings common/maven/settings.xml

      - run: echo "IMAGE_FQN=$(echo ${{ env.CONTAINER_REGISTRY_HOSTNAME }}/${{ env.IMAGE_REPOSITORY }}/${{ env.SERVICE_NAME }})" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:qemu-v6.1.0
          platforms: amd64,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY_HOSTNAME }}
          username: ${{ env.CONTAINER_REGISTRY_USER_PUSH }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app
          build-args: BUILD_ALL_CLIS=false
          platforms: ${{ env.TARGET_PLATFORMS }}
          push: true
          tags: ${{ env.IMAGE_FQN }}:${{ env.ARGOCD_VERSION }}
          # cache-from: type=registry,ref=${{ env.IMAGE_FQN }}:buildcache
          # cache-to: type=registry,ref=${{ env.IMAGE_FQN }}:buildcache,mode=max
